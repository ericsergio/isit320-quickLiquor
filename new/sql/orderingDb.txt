-- MySQL Script generated by MySQL Workbench
-- Wed Nov  3 17:21:09 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema booz
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema booz
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `booz` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `booz` ;

-- -----------------------------------------------------
-- Table `booz`.`dists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`dists` (
  `d_id` INT(11) NOT NULL,
  `d_name` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`d_id`),
  UNIQUE INDEX `d_id` (`d_id` ASC) VISIBLE,
  UNIQUE INDEX `d_name` (`d_name` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `booz`.`item_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`item_types` (
  `it_id` INT(11) NOT NULL,
  `it_name` VARCHAR(12) NOT NULL,
  PRIMARY KEY (`it_id`),
  UNIQUE INDEX `it_id` (`it_id` ASC) VISIBLE,
  UNIQUE INDEX `it_name` (`it_name` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `booz`.`order_units`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`order_units` (
  `ou_id` INT(11) NOT NULL,
  `ou_name` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`ou_id`),
  UNIQUE INDEX `ou_id` (`ou_id` ASC) VISIBLE,
  UNIQUE INDEX `ou_name` (`ou_name` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `booz`.`unit_quantity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`unit_quantity` (
  `uq_id` INT(11) NOT NULL,
  `uq_name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`uq_id`),
  UNIQUE INDEX `uq_id` (`uq_id` ASC) VISIBLE,
  UNIQUE INDEX `uq_name` (`uq_name` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `booz`.`items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`items` (
  `i_name` VARCHAR(50) NOT NULL,
  `i_dist` INT(11) NOT NULL,
  `i_type` INT(11) NOT NULL,
  `i_par` INT(11) NOT NULL,
  `d_order_type` INT(11) NOT NULL,
  `d_order_quantity` INT(11) NOT NULL,
  `default_order` INT(11) NOT NULL,
  `on_hand` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`i_name`),
  UNIQUE INDEX `i_name` (`i_name` ASC) VISIBLE,
  INDEX `i_dist` (`i_dist` ASC) VISIBLE,
  INDEX `i_type` (`i_type` ASC) VISIBLE,
  INDEX `d_order_type` (`d_order_type` ASC) VISIBLE,
  INDEX `d_order_quantity` (`d_order_quantity` ASC) VISIBLE,
  CONSTRAINT `items_ibfk_1`
    FOREIGN KEY (`i_dist`)
    REFERENCES `booz`.`dists` (`d_id`),
  CONSTRAINT `items_ibfk_2`
    FOREIGN KEY (`i_type`)
    REFERENCES `booz`.`item_types` (`it_id`),
  CONSTRAINT `items_ibfk_3`
    FOREIGN KEY (`d_order_type`)
    REFERENCES `booz`.`order_units` (`ou_id`),
  CONSTRAINT `items_ibfk_4`
    FOREIGN KEY (`d_order_quantity`)
    REFERENCES `booz`.`unit_quantity` (`uq_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `booz`.`ordered`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`ordered` (
  `o_id` INT(11) NOT NULL AUTO_INCREMENT,
  `o_name` VARCHAR(50) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `o_quantity` INT(2) NULL DEFAULT NULL,
  `o_unit` VARCHAR(6) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `o_unit_quantity` VARCHAR(10) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `o_date` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`o_id`),
  UNIQUE INDEX `o_id` (`o_id` ASC) VISIBLE,
  INDEX `o_name` (`o_name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3092
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `booz` ;

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`co_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`co_order` (`name` INT, `default` INT, `unit` INT, `unit_type` INT, `current` INT);

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`cr_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`cr_order` (`name` INT, `default` INT, `unit` INT, `unit_type` INT, `current` INT);

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`i_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`i_details` (`Name` INT, `Dist` INT, `Type` INT, `Par` INT, `Unit` INT, `Units` INT, `Quantity` INT, `On_Hand` INT);

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`itemdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`itemdetails` (`Name` INT, `Dist` INT, `Type` INT, `Par` INT, `Unit` INT, `Units` INT, `Quantity` INT, `On_Hand` INT);

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`so_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`so_order` (`name` INT, `default` INT, `unit` INT, `unit_type` INT, `current` INT);

-- -----------------------------------------------------
-- Placeholder table for view `booz`.`yo_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `booz`.`yo_order` (`name` INT, `default` INT, `unit` INT, `unit_type` INT, `current` INT);

-- -----------------------------------------------------
-- procedure itemOrderedInfo
-- -----------------------------------------------------

DELIMITER $$
USE `booz`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `itemOrderedInfo`(o_name_param varchar(45))
begin
    declare bottle_order_quantity int;
    declare case_order_quantity int;
    declare total int;
    declare min_order_date int;
    declare max_order_date int;
    declare case_quantity int;
    declare days_since_1st_order int;
    declare per_day_rate decimal(4,2);
    declare per_unit_rate decimal(4,2);
    declare item_par int;
    declare item_type int;
    declare item_on_hand int;
    
    select sum(o_quantity) into bottle_order_quantity
    from ordered 
    where o_name = o_name_param and o_unit = 'Bottle';
    
    select sum(o_quantity) into case_order_quantity
    from ordered 
    where o_name = o_name_param and o_unit = 'Case';
    
    select unix_timestamp(min(o_date)) into min_order_date from ordered where o_name = o_name_param;
    select unix_timestamp(max(o_date)) into max_order_date from ordered where o_name = o_name_param;
    
    if case_order_quantity is null then
		set case_order_quantity = 0;
	end if;
    
	if bottle_order_quantity is null then
		set bottle_order_quantity = 0;
	end if;
    
	select items.i_par, items.i_type, items.on_hand into item_par, item_type, item_on_hand
    from items 
    where o_name_param = items.i_name;

	if item_type <= 2 then
		set case_quantity = 12;
        set total = (case_order_quantity * case_quantity) + bottle_order_quantity;
    elseif item_type > 2 then
		set case_quantity = 24;
        set total = case_quantity * case_order_quantity;
	end if;
    
    if o_name_param = 'Moonshine' then
		set case_quantity = 8;
		set total = ((case_order_quantity * case_quantity) + bottle_order_quantity) * .75;
    end if;
    
	if o_name_param = 'Royal_Gentleman_Whiskey' then
		set total = ((case_order_quantity * case_quantity) + bottle_order_quantity) * .75;
    end if;
    
    set days_since_1st_order = (max_order_date - min_order_date) / 60 / 60 / 24;
    
    set per_day_rate = total / days_since_1st_order;
    
    set per_unit_rate = 1 / per_day_rate;
    
    select o_name_param as 'Item_Name', 
	bottle_order_quantity as 'Bottle_Quantity', 
        case_order_quantity as 'Case_Quantity', 
        total as 'Total', 
	min_order_date as 'Date_Start', 
        max_order_date as 'Date_End', 
        days_since_1st_order as 'Days_Since_First_Order', 
        per_day_rate as 'Per_Day_Rate', 
        per_unit_rate as 'Per_Unit_Rate', 
        item_par as 'Item_Par', 
        item_type as 'Item_Type', 
        item_on_hand as 'On_Hand';
end$$

DELIMITER ;

-- -----------------------------------------------------
-- View `booz`.`co_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`co_order`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`co_order` AS select `i`.`i_name` AS `name`,`i`.`default_order` AS `default`,`ou`.`ou_name` AS `unit`,`uq`.`uq_name` AS `unit_type`,`i`.`on_hand` AS `current` from ((`booz`.`items` `i` join `booz`.`order_units` `ou` on((`i`.`d_order_type` = `ou`.`ou_id`))) join `booz`.`unit_quantity` `uq` on((`i`.`d_order_quantity` = `uq`.`uq_id`))) where ((`i`.`on_hand` < `i`.`i_par`) and (`i`.`i_dist` = 2));

-- -----------------------------------------------------
-- View `booz`.`cr_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`cr_order`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`cr_order` AS select `i`.`i_name` AS `name`,`i`.`default_order` AS `default`,`ou`.`ou_name` AS `unit`,`uq`.`uq_name` AS `unit_type`,`i`.`on_hand` AS `current` from ((`booz`.`items` `i` join `booz`.`order_units` `ou` on((`i`.`d_order_type` = `ou`.`ou_id`))) join `booz`.`unit_quantity` `uq` on((`i`.`d_order_quantity` = `uq`.`uq_id`))) where ((`i`.`on_hand` < `i`.`i_par`) and (`i`.`i_dist` = 3));

-- -----------------------------------------------------
-- View `booz`.`i_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`i_details`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`i_details` AS select `booz`.`items`.`i_name` AS `Name`,`booz`.`dists`.`d_name` AS `Dist`,`booz`.`item_types`.`it_name` AS `Type`,`booz`.`items`.`i_par` AS `Par`,`booz`.`order_units`.`ou_name` AS `Unit`,`booz`.`unit_quantity`.`uq_name` AS `Units`,`booz`.`items`.`default_order` AS `Quantity`,`booz`.`items`.`on_hand` AS `On_Hand` from ((((`booz`.`items` join `booz`.`dists` on((`booz`.`dists`.`d_id` = `booz`.`items`.`i_dist`))) join `booz`.`item_types` on((`booz`.`item_types`.`it_id` = `booz`.`items`.`i_type`))) join `booz`.`order_units` on((`booz`.`order_units`.`ou_id` = `booz`.`items`.`d_order_type`))) join `booz`.`unit_quantity` on((`booz`.`unit_quantity`.`uq_id` = `booz`.`items`.`d_order_quantity`)));

-- -----------------------------------------------------
-- View `booz`.`itemdetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`itemdetails`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`itemdetails` AS select `booz`.`items`.`i_name` AS `Name`,`booz`.`dists`.`d_name` AS `Dist`,`booz`.`item_types`.`it_name` AS `Type`,`booz`.`items`.`i_par` AS `Par`,`booz`.`order_units`.`ou_name` AS `Unit`,`booz`.`unit_quantity`.`uq_name` AS `Units`,`booz`.`items`.`default_order` AS `Quantity`,`booz`.`items`.`on_hand` AS `On_Hand` from ((((`booz`.`items` join `booz`.`dists` on((`booz`.`dists`.`d_id` = `booz`.`items`.`i_dist`))) join `booz`.`item_types` on((`booz`.`item_types`.`it_id` = `booz`.`items`.`i_type`))) join `booz`.`order_units` on((`booz`.`order_units`.`ou_id` = `booz`.`items`.`d_order_type`))) join `booz`.`unit_quantity` on((`booz`.`unit_quantity`.`uq_id` = `booz`.`items`.`d_order_quantity`)));

-- -----------------------------------------------------
-- View `booz`.`so_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`so_order`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`so_order` AS select `i`.`i_name` AS `name`,`i`.`default_order` AS `default`,`ou`.`ou_name` AS `unit`,`uq`.`uq_name` AS `unit_type`,`i`.`on_hand` AS `current` from ((`booz`.`items` `i` join `booz`.`order_units` `ou` on((`i`.`d_order_type` = `ou`.`ou_id`))) join `booz`.`unit_quantity` `uq` on((`i`.`d_order_quantity` = `uq`.`uq_id`))) where ((`i`.`on_hand` < `i`.`i_par`) and (`i`.`i_dist` = 1));

-- -----------------------------------------------------
-- View `booz`.`yo_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booz`.`yo_order`;
USE `booz`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `booz`.`yo_order` AS select `i`.`i_name` AS `name`,`i`.`default_order` AS `default`,`ou`.`ou_name` AS `unit`,`uq`.`uq_name` AS `unit_type`,`i`.`on_hand` AS `current` from ((`booz`.`items` `i` join `booz`.`order_units` `ou` on((`i`.`d_order_type` = `ou`.`ou_id`))) join `booz`.`unit_quantity` `uq` on((`i`.`d_order_quantity` = `uq`.`uq_id`))) where ((`i`.`on_hand` < `i`.`i_par`) and (`i`.`i_dist` = 4));

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

